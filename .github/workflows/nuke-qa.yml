name: Nuke QA Pipeline
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

on:
  workflow_dispatch:

concurrency: terragrunt-qa

defaults:
  run:
    shell: bash

env:
  AWS_DEFAULT_REGION: eu-west-1
  TF_IN_AUTOMATION: "true"

jobs:
  nuke:
    name: Nuke QA Terraform resources
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terragrunt and OpenTofu
        uses: gruntwork-io/terragrunt-action@v3
        with:
          github_token: ${{ secrets.SHARED_WORKFLOW_HOUSEKEEPING }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_QA_ROLE_TO_ASSUME }}
          role-session-name: nuke-qa-session
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_GITHUB_TOKEN }}
          ARM_CLIENT_ID: op://CloudEng-General/Terraform Azure App Service Principal/username
          ARM_CLIENT_SECRET: op://CloudEng-General/Terraform Azure App Service Principal/password
          ARM_SUBSCRIPTION_ID: op://CloudEng-General/Terraform Azure App Service Principal/subscription_id
          ARM_TENANT_ID: op://CloudEng-General/Terraform Azure App Service Principal/tenant_id
          TF_VAR_atlantis_github_token: op://CloudEng-General/Github account devex-sa/Tokens/atlantis-qa
          TF_VAR_docker_hub_password: op://CloudEng-General/Docker Cloud/username
          TF_VAR_docker_hub_username: op://CloudEng-General/Docker Cloud/password
          TF_VAR_eks_addon_awsebscsidriver_kms_arn: op://CloudEng-General/Hardened Account EBS Volume Shared KMS Key/arn
          TF_VAR_fluxcd_bootstrap_repo_owner_token: op://CloudEng-General/Github account devex-sa/Tokens/flux-qa
          TF_VAR_grafana_agent_api_token: op://CloudEng-General/Grafana.com - sandbox/grafana_token
          TF_VAR_grafana_agent_loki_url: op://CloudEng-General/Grafana.com - sandbox/Loki_URL
          TF_VAR_grafana_agent_loki_username: op://CloudEng-General/Grafana.com - sandbox/Loki_Username
          TF_VAR_grafana_agent_prometheus_url: op://CloudEng-General/Grafana.com - sandbox/Prometheus_URL
          TF_VAR_grafana_agent_prometheus_username: op://CloudEng-General/Grafana.com - sandbox/Prometheus_Username
          TF_VAR_grafana_agent_tempo_url: op://CloudEng-General/Grafana.com - sandbox/Tempo_URL
          TF_VAR_grafana_agent_tempo_username: op://CloudEng-General/Grafana.com - sandbox/Tempo_Username
          TF_VAR_onepassword_credentials_json: op://CloudEng-General/1Password Connect/nonprod_json
          TF_VAR_onepassword_token_for_atlantis: op://CloudEng-General/1Password Connect/nonprod_atlantis_token
          TF_VAR_velero_ebs_csi_kms_arn: op://CloudEng-General/Hardened Account EBS Volume Shared KMS Key/arn
          SLACK_WEBHOOK: op://CloudEng-General/Slack dfds.slack.com webhooks/jdm5vktylqnczrlkkbvsveyp5e

      - name: Terraform destroy Velero S3 bucket
        run: ./src/qa-test-eks.sh destroy-velero-bucket eu-west-1 _global/s3-bucket-velero
      - name: Terraform destroy cluster & services
        run: ./src/qa-test-eks.sh destroy-cluster eu-west-1 qa
      - name: Terraform destroy shared resources
        run: ./src/qa-test-eks.sh destroy-public-bucket eu-west-1 _global/eks-public-s3-bucket

  nuke_account:
    name: Nuke QA AWS account
    runs-on: ubuntu-latest
    needs: nuke
    if: always()
    container:
      image: dfdsdk/aws-nuke:0.0.29
    steps:
      - name: Checkout Nuke config
        uses: actions/checkout@v4
        with:
          repository: dfds/qa-nuke-config
          ref: main
          token: ${{ secrets.SHARED_WORKFLOW_HOUSEKEEPING }}
          path: ./qa-nuke-config

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_QA_ROLE_TO_ASSUME }}
          role-session-name: nuke-qa-session
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Nuke resources in QA account
        timeout-minutes: 60
        run: /usr/local/bin/aws-nuke run --config ./qa-nuke-config/nuke-config.yaml --log-level info --force --no-dry-run
