image:
  repository: ${atlantis_image}
  tag: ${atlantis_image_tag}
  pullPolicy: IfNotPresent

orgWhitelist: ${github_repos}
logLevel: "info"

disableApply: true
disableApplyAll: true

github:
  user: ${github_username}
  token: ${github_token}
  secret: ${github_secret}

environmentSecrets:
  - name: AWS_ACCESS_KEY_ID
    secretKeyRef:
      name: aws-credentials
      key: aws_access_key
  - name: AWS_SECRET_ACCESS_KEY
    secretKeyRef:
      name: aws-credentials
      key: aws_secret
  - name: access_key_master
    secretKeyRef:
      name: aws-credentials
      key: access_key_master
  - name: secret_key_master
    secretKeyRef:
      name: aws-credentials
      key: secret_key_master

ingress:
  host: ${atlantis_ingress}

repoConfig: |
  ---
  repos:
  - id: "/.*/"
    workflow: terragrunt
    allowed_overrides: [workflow]
  workflows:
    terragrunt:
      plan:
        steps:
        - run: terragrunt plan-all -no-color --terragrunt-non-interactive -input=false
      apply:
        steps:
        - run: exit 1
    eks-pipeline:
      plan:
        steps:
        - env:
            name: TF_VAR_arm_tenant_id
            value: ${arm_tenant_id}
        - env:
            name: TF_VAR_arm_subscription_id
            value: ${arm_subscription_id}
        - env:
            name: TF_VAR_arm_client_id
            value: ${arm_client_id}
        - env:
            name: TF_VAR_arm_client_secret
            value: ${arm_client_secret}
        - env:
            name: TF_VAR_github_token
            value: ${github_token}
        - run: terragrunt plan-all -no-color --terragrunt-non-interactive -input=false
      apply:
        steps:
        - run: exit 1
