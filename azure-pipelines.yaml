name: $(Build.BuildId)

# Triggers
trigger:
  - master

pr:
  autoCancel: false
  drafts: false
  branches:
    include:
      - "*"

# Define resources for container to use.
resources:
  containers:
    - container: prime
      image: dfdsdk/prime-pipeline:0.6.18
      env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        TF_VAR_platform_fluxcd_github_token: $(TF_VAR_platform_fluxcd_github_token)
        TF_VAR_atlantis_github_token: $(TF_VAR_atlantis_github_token)
        TF_VAR_crossplane_provider_confluent_email: $(CROSSPLANE_PROVIDER_CONFLUENT_EMAIL)
        TF_VAR_crossplane_provider_confluent_password: $(CROSSPLANE_PROVIDER_CONFLUENT_PASSWORD)
    - container: powershell_devex_container
      image: dfdsdk/powershell-devex:0.8.2
      env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    - container: aws-nuke
      image: dfdsdk/aws-nuke:0.0.7
      env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
  repositories:
    - repository: Origin
      type: github
      endpoint: "dfds (2)"
      name: dfds/infrastructure-modules
      ref: master
    - repository: Rollover
      type: github
      endpoint: "dfds (2)"
      name: dfds/node-rollover
      ref: main
    - repository: Nuke
      type: github
      endpoint: "dfds (2)"
      name: dfds/qa-nuke-config
      ref: main

# Define variable group to use
variables:
  - group: "Infrastructure-Modules QA"

lockBehavior: sequential
pool:
  vmImage: "ubuntu-latest"
stages:
  - stage: nuke
    displayName: "Nuke QA Account"
    condition: eq(variables['NUKE_QA'], 'true')
    jobs:
      - deployment: destroy
        displayName: Destroy resources
        container: prime
        environment: QA
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: origin
                - bash: ./src/qa-test-eks.sh destroy-velero-bucket eu-west-1 _global/s3-bucket-velero
                  displayName: "Terraform destroy Velero S3 bucket"
                  condition: succeededOrFailed()
                  timeoutInMinutes: 30
                - bash: ./src/qa-test-eks.sh destroy-cluster eu-west-1 qa
                  displayName: "Terraform destroy cluster & services"
                  condition: succeededOrFailed()
                  timeoutInMinutes: 60
                - bash: ./src/qa-test-eks.sh destroy-public-bucket eu-west-1 _global/eks-public-s3-bucket
                  displayName: "Terraform destroy shared resources"
                  condition: succeededOrFailed()
                  timeoutInMinutes: 30

      - deployment: nuke_account
        displayName: Nuke QA's AWS account
        container: aws-nuke
        dependsOn: destroy
        condition: succeededOrFailed()
        environment: QA
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: Nuke
                - bash: /usr/local/bin/aws-nuke -c ./nuke-config.yaml --force --force-sleep 5 --no-dry-run
                  displayName: "Nuke resources in QA account"
                  timeoutInMinutes: 60

  - stage: test
    displayName: "Testing"
    dependsOn: nuke
    condition: or(succeededOrFailed('nuke'), ne(variables['NUKE_QA'], 'true'))
    jobs:
      - deployment: init
        displayName: Provision from master branch
        container: prime
        environment: QA
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: Origin
                - bash: ./src/qa-test-eks.sh apply-shared _global/eks-public-s3-bucket
                  displayName: "Provision shared EKS S3 bucket"
                  timeoutInMinutes: 15
                - bash: ./src/qa-test-eks.sh apply-cluster eu-west-1 qa
                  displayName: "Provision cluster & services"
                  timeoutInMinutes: 60
                - bash: ./src/qa-test-eks.sh apply-shared _global/s3-bucket-velero
                  displayName: "Provision Velero S3 bucket"
                  timeoutInMinutes: 15
                - bash: ./src/qa-test-eks.sh test eu-west-1 qa
                  displayName: "Run tests"
                  timeoutInMinutes: 15

      - deployment: rollover # TODO work on these steps here
        displayName: Rollover nodes
        timeoutInMinutes: 15
        container: powershell_devex_container
        dependsOn: init
        environment: QA
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: Rollover
                - task: PowerShell@2
                  inputs:
                    targetType: filePath
                    filePath: "asg_k8s_rollover.ps1"
                    arguments: "-ClusterName qa -AwsRegion eu-west-1 -KubeParameterRegion eu-west-1"
                    pwsh: true

      - deployment: apply
        displayName: Apply from feature branch
        container: prime
        dependsOn: rollover
        condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'))
        environment: QA
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - bash: ./src/qa-test-eks.sh apply-shared _global/eks-public-s3-bucket
                  displayName: "Provision shared EKS S3 bucket"
                  timeoutInMinutes: 15
                - bash: ./src/qa-test-eks.sh apply-cluster eu-west-1 qa
                  displayName: "Provision cluster & services"
                  timeoutInMinutes: 60
                - bash: ./src/qa-test-eks.sh apply-shared _global/s3-bucket-velero
                  displayName: "Provision Velero S3 bucket"
                  timeoutInMinutes: 15
                - bash: ./src/qa-test-eks.sh test eu-west-1 qa
                  displayName: "Run tests"
                  timeoutInMinutes: 15

      - deployment: destroy
        displayName: Destroy resources
        container: prime
        dependsOn: apply
        condition: and(succeededOrFailed(), eq(variables['TEST_DESTROY'], 'true'))
        environment: QA
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - bash: ./src/qa-test-eks.sh destroy-velero-bucket eu-west-1 _global/s3-bucket-velero
                  displayName: "Terraform destroy Velero S3 bucket"
                  condition: succeededOrFailed()
                  timeoutInMinutes: 30
                - bash: ./src/qa-test-eks.sh destroy-cluster eu-west-1 qa
                  displayName: "Terraform destroy cluster & services"
                  condition: succeededOrFailed()
                  timeoutInMinutes: 60
                - bash: ./src/qa-test-eks.sh destroy-public-bucket eu-west-1 _global/eks-public-s3-bucket
                  displayName: "Terraform destroy shared resources"
                  condition: succeededOrFailed()
                  timeoutInMinutes: 30
